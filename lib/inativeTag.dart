import 'dart:typed_data';

abstract class INativeTag {
  int plc_tag_abort(int tag);
  int plc_tag_check_lib_version(int req_major, int req_minor, int req_patch);
  int plc_tag_create(String lpString, int timeout);
  String plc_tag_decode_error(int err);
  int plc_tag_destroy(int tag);
  int plc_tag_get_bit(int tag, int offset_bit);
  double plc_tag_get_float32(int tag, int offset);
  double plc_tag_get_float64(int tag, int offset);
  int plc_tag_get_int16(int tag, int offset);
  int plc_tag_get_int32(int tag, int offset);
  int plc_tag_get_int64(int tag, int offset);
  int plc_tag_get_int8(int tag, int offset);
  int plc_tag_get_int_attribute(int tag, String attrib_name, int default_value);
  int plc_tag_get_size(int tag);
  int plc_tag_set_size(int tag, int new_size);
  int plc_tag_get_uint16(int tag, int offset);
  int plc_tag_get_uint32(int tag, int offset);
  int plc_tag_get_uint64(int tag, int offset);
  int plc_tag_get_uint8(int tag, int offset);
  int plc_tag_lock(int tag);
  int plc_tag_read(int tag, int timeout);
  // int plc_tag_register_callback(int tag_id, plctag.callback_func func);
  // int plc_tag_register_logger(plctag.log_callback_func func);
  int plc_tag_set_bit(int tag, int offset_bit, int val);
  void plc_tag_set_debug_level(int debug_level);
  int plc_tag_set_float32(int tag, int offset, double val);
  int plc_tag_set_float64(int tag, int offset, double val);
  int plc_tag_set_int16(int tag, int offset, int val);
  int plc_tag_set_int32(int tag, int offset, int val);
  int plc_tag_set_int64(int tag, int offset, int val);
  int plc_tag_set_int8(int tag, int offset, int val);
  int plc_tag_set_int_attribute(int tag, String attrib_name, int new_value);
  int plc_tag_set_uint16(int tag, int offset, int val);
  int plc_tag_set_uint32(int tag, int offset, int val);
  int plc_tag_set_uint64(int tag, int offset, int val);
  int plc_tag_set_uint8(int tag, int offset, int val);
  void plc_tag_shutdown();
  int plc_tag_status(int tag);
  int plc_tag_unlock(int tag);
  int plc_tag_unregister_callback(int tag_id);
  int plc_tag_unregister_logger();
  int plc_tag_write(int tag, int timeout);
  int plc_tag_get_raw_bytes(int tag, int start_offset, Uint8List buffer, int buffer_length);
  int plc_tag_set_raw_bytes(int tag, int start_offset, Uint8List buffer, int buffer_length);
  int plc_tag_get_string_length(int tag, int String_start_offset);
  // int plc_tag_get_string(int tag, int String_start_offset, StringBuilder buffer, int buffer_length);
  int plc_tag_get_string_total_length(int tag, int String_start_offset);
  int plc_tag_get_string_capacity(int tag, int String_start_offset);
  int plc_tag_set_string(int tag, int String_start_offset, String String_val);
}
